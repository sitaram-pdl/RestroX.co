import React,{useState} from "react"
import styles from "./LineXGraph.module.css"
import { Line } from 'react-chartjs-2';
import {BiDotsVerticalRounded} from "react-icons/bi"
import Dropdown from '../react-dropdown'
const data = {
  labels: ['1 AM', '2 AM ', '3 AM', '4 AM', '5 AM', '6 AM',"7 AM","8 AM","9 AM","10 AM"],
  datasets: [
    {
      label: '2',
      data: [-12, -19, -3, -12, -2,-8, -3,-4,-5,-7],
      fill: false,
      backgroundColor: 'rgba(94,91,229,0.1)',
      borderColor: 'rgb(94,91,229)',
      tension: 0,
      
    },
    {
        label: '1',
        data: [22, 9, 13, 5, 12,8, 0,5,4,5,7],
        fill: false,
        backgroundColor: 'rgb(255,146,43)',
        borderColor: 'rgb(255,146,43)',
        tension: 0
      },
  ],
};
const options2 = [
    { value: 'Daily', label: 'Daily' },
    { value: 'This Week', label: 'This Week' },
    { value: 'This Month', label: 'This Month' }, 
    { value: 'Last Year', label: 'Last Year' },
   
    ]
const options = {
    responsive: true,
    plugins: {
        legend: {
            display:false,
        
        },
        
      
      },
  scales: {
      
    yAxes: [
      {
        ticks: {
          beginAtZero: true,
        },
      },
    ],
  },
};
const MultiGraph=(props)=>{
  const size= 6
  const center = 3
  const radius= 2.9
  const strokeWidth= 0.2
  const circleOneStroke=props.theme?"rgba(31, 29, 42, 0.084)":"gray"
  const circleTwoStroke='#4A4DE6'
  const circleTwoStroke2='tomato'

const [startDate, setStartDate] = useState(new Date());
    return(
        <div className={styles.container}>
             <div className={styles.header}>
             <div className={styles.image}>
             <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                <mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="32" height="32">
                <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill="white"/>
                </mask>
                <g mask="url(#mask0)">
                <path d="M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32Z" fill="#202326"/>
                </g>
                <path d="M10.2351 15.9707C10.1937 15.9745 10.1728 15.9235 10.2022 15.8941C10.2836 15.8127 10.365 15.7313 10.4463 15.65C10.5725 15.5238 10.7002 15.3961 10.8264 15.2699C10.872 15.2243 10.9176 15.1787 10.9632 15.1331C11.0255 15.0708 11.0924 15.013 11.1486 14.9446C11.2885 14.7805 11.3158 14.5403 11.22 14.3472C11.1226 14.1525 10.9128 14.0339 10.6954 14.0475C10.5479 14.0582 10.4232 14.1281 10.3214 14.2299C10.2515 14.2998 10.18 14.3713 10.1101 14.4412C10.0098 14.5415 9.91098 14.6403 9.81065 14.7407C9.67081 14.8805 9.53096 15.0204 9.39111 15.1602C9.27711 15.2742 9.16158 15.3897 9.04758 15.5037C8.95485 15.5965 8.86213 15.6892 8.76788 15.7834C8.6858 15.8655 8.60219 15.9491 8.52011 16.0312C8.47299 16.0783 8.41978 16.1254 8.37874 16.1787C8.24346 16.3504 8.22375 16.5952 8.33173 16.7883C8.37735 16.8674 8.4473 16.9312 8.51117 16.9951C8.64195 17.1259 8.7712 17.2551 8.90198 17.3859C9.02819 17.5121 9.15593 17.6399 9.28214 17.7661C9.37642 17.8604 9.47223 17.9562 9.56651 18.0504C9.67447 18.1584 9.78092 18.2649 9.88889 18.3728C10.0318 18.5158 10.1748 18.6587 10.3177 18.8017C10.415 18.899 10.526 18.9705 10.6659 18.9887C10.8818 19.0161 11.0962 18.9082 11.2056 18.7197C11.3135 18.5327 11.2983 18.2925 11.169 18.1207C11.1082 18.0386 11.0276 17.9701 10.9561 17.8987C10.8436 17.7861 10.7326 17.6751 10.62 17.5626C10.5151 17.4577 10.4087 17.3512 10.3037 17.2463C10.2367 17.1792 10.2845 17.0644 10.3793 17.0646C10.6384 17.0649 10.8975 17.0644 11.1566 17.0656C11.4637 17.0656 11.7693 17.0672 12.0749 17.0657C12.3608 17.0658 12.6466 17.0658 12.9324 17.0659C13.2152 17.0659 13.501 17.066 13.7838 17.0661C13.9997 17.0661 14.2156 17.0661 14.43 17.0677C14.4756 17.0677 14.5212 17.0677 14.5668 17.0677C14.7705 17.0647 14.9606 16.9538 15.0533 16.7698C15.1475 16.5874 15.1277 16.3609 15.0045 16.1951C14.9011 16.0552 14.7369 15.9761 14.5636 15.9761C14.4039 15.9746 14.2443 15.976 14.0831 15.976C13.7988 15.9744 13.5145 15.9759 13.2302 15.9743C12.917 15.9743 12.6068 15.9742 12.2936 15.9741C11.9409 15.9741 11.5882 15.974 11.234 15.9724C10.901 15.9708 10.568 15.9723 10.2351 15.9707ZM15.943 18.4774C15.9431 18.7997 15.9431 19.122 15.9432 19.4443C15.9417 19.7073 15.9433 19.9704 15.9418 20.2334C15.9419 20.4827 15.9419 20.7321 15.9404 20.9829C15.939 21.2642 15.9406 21.5455 15.9391 21.8267C15.9392 22.1703 15.9392 22.5109 15.9393 22.8545C15.9393 22.8646 15.9271 22.8697 15.9199 22.8625C15.762 22.7046 15.6029 22.5454 15.4451 22.3877C15.2824 22.2249 15.1212 22.0638 14.9585 21.901C14.8672 21.8098 14.7577 21.7459 14.63 21.7277C14.4628 21.7033 14.2925 21.761 14.1724 21.8811L14.1739 21.8796C14.0478 22.0058 13.99 22.1882 14.0235 22.3615C14.0448 22.4801 14.1057 22.5805 14.1893 22.6641C14.3094 22.7843 14.428 22.9029 14.5482 23.023C14.7367 23.2116 14.9253 23.4001 15.1154 23.5902C15.2842 23.759 15.4545 23.9293 15.6233 24.0981C15.7312 24.2061 15.8392 24.314 15.9472 24.422C15.9958 24.4707 16.043 24.5178 16.0916 24.5665C16.1859 24.6607 16.306 24.7231 16.4398 24.7353C16.6025 24.749 16.7591 24.6897 16.8746 24.5773C16.9142 24.5377 16.9537 24.4982 16.9917 24.4602C17.1087 24.3432 17.2258 24.2261 17.3428 24.1091C17.51 23.9419 17.6772 23.7747 17.8444 23.6075C18.0269 23.425 18.2093 23.2426 18.3917 23.0602C18.5163 22.9356 18.6394 22.8125 18.7641 22.6878C18.831 22.6209 18.8903 22.5495 18.9252 22.4598C18.986 22.2986 18.9677 22.1162 18.8749 21.9717C18.6864 21.6767 18.2698 21.6432 18.0235 21.8864C17.9323 21.9776 17.8426 22.0673 17.7514 22.1585C17.5584 22.3516 17.3653 22.5446 17.1723 22.7377C17.1207 22.7893 17.0324 22.7527 17.0324 22.6797C17.0324 22.5906 17.0324 22.5014 17.0323 22.4123C17.0323 22.2116 17.0307 22.0094 17.0322 21.8072C17.0322 21.6947 17.0322 21.5852 17.0322 21.4727C17.0321 21.2477 17.0321 21.0196 17.032 20.7946C17.032 20.7004 17.032 20.6061 17.032 20.5118C17.0319 20.2838 17.0304 20.0542 17.0318 19.8246C17.0318 19.7212 17.0318 19.6179 17.0318 19.5145C17.0317 19.3016 17.0317 19.0918 17.0317 18.879C17.0316 18.7756 17.0316 18.6752 17.0316 18.5718C17.0316 18.5049 17.0346 18.4381 17.0224 18.3712C16.9829 18.1522 16.805 17.9773 16.5875 17.9362C16.3686 17.8936 16.1421 17.9924 16.022 18.1794C15.9734 18.2706 15.943 18.374 15.943 18.4774ZM21.8853 14.1713C21.6725 14.3841 21.6786 14.7308 21.887 14.9452C21.9691 15.0273 22.0527 15.1109 22.1348 15.193C22.2991 15.3573 22.4648 15.523 22.629 15.6873C22.7231 15.7813 22.6569 15.9422 22.5239 15.9427C22.3033 15.9437 22.0824 15.9446 21.8628 15.9456C21.5618 15.9455 21.2608 15.9485 20.9597 15.9484C20.6785 15.9499 20.3987 15.9499 20.1175 15.9513C19.8392 15.9528 19.5595 15.9527 19.2797 15.9557C19.0654 15.9572 18.8525 15.9572 18.6381 15.9586C18.5895 15.9586 18.5424 15.9601 18.4952 15.9586C18.3067 15.9616 18.1304 16.0589 18.027 16.217C17.916 16.3888 17.9085 16.6092 18.0089 16.7856C18.1032 16.9559 18.2841 17.0608 18.4787 17.0639C18.6231 17.0655 18.7676 17.064 18.9135 17.064C19.1994 17.0641 19.4852 17.0641 19.7695 17.0657C20.0797 17.0657 20.3898 17.0658 20.7015 17.0674C21.0512 17.0674 21.3993 17.069 21.7475 17.0676C22.0744 17.0692 22.4013 17.0677 22.7281 17.0693C22.7693 17.0693 22.7911 17.1219 22.762 17.151C22.563 17.35 22.365 17.548 22.1657 17.7473C22.0593 17.8537 21.9514 17.9586 21.8465 18.0665C21.7188 18.1972 21.6596 18.3842 21.6961 18.5636C21.7387 18.7704 21.9029 18.9377 22.1082 18.9848C22.2937 19.0274 22.4837 18.9682 22.6175 18.8375C22.6692 18.7858 22.7208 18.7341 22.771 18.6839C22.882 18.573 22.9929 18.462 23.1039 18.351C23.3304 18.1245 23.5569 17.898 23.7834 17.6716C24.0236 17.4314 24.2637 17.1912 24.5054 16.9495C24.5176 16.9374 24.5297 16.9252 24.5419 16.913C24.6453 16.8097 24.7182 16.6607 24.7227 16.5132C24.7258 16.3733 24.6908 16.2167 24.5934 16.1103C24.5189 16.0297 24.4368 15.9537 24.3577 15.8746C24.2042 15.721 24.049 15.5659 23.8955 15.4123C23.7419 15.2587 23.5883 15.1051 23.4362 14.9531C23.2826 14.7995 23.129 14.6459 22.9755 14.4923C22.8751 14.392 22.7747 14.2916 22.6759 14.1927C22.6181 14.135 22.5558 14.0848 22.4797 14.0544C22.3475 13.9981 22.1954 13.998 22.0632 14.0512C21.9993 14.0786 21.937 14.1196 21.8853 14.1713ZM16.8715 8.38535C17.0844 8.59825 17.2973 8.81114 17.5102 9.02403C17.755 9.26886 17.9999 9.51368 18.2447 9.75851C18.3344 9.84823 18.4241 9.93795 18.5139 10.0277C18.5899 10.1037 18.6659 10.1797 18.742 10.2558C18.8165 10.3303 18.8879 10.4048 18.926 10.5067C18.999 10.7013 18.9534 10.9263 18.812 11.0768C18.6707 11.2242 18.4548 11.282 18.2587 11.2226C18.1309 11.1831 18.0427 11.0979 17.9515 11.0067C17.8952 10.9504 17.8375 10.8926 17.7812 10.8364C17.5531 10.6083 17.325 10.3802 17.0969 10.1521C17.0739 10.1291 17.0346 10.1454 17.0346 10.1779C17.0346 10.4956 17.0347 10.8154 17.0347 11.1327C17.0348 11.4398 17.0349 11.75 17.0349 12.0571C17.035 12.3429 17.035 12.6287 17.0351 12.9176C17.0351 13.2034 17.0352 13.4862 17.0353 13.772C17.0353 13.9879 17.0353 14.2038 17.0369 14.4212C17.0369 14.4729 17.0369 14.5216 17.0369 14.5733C17.0354 14.7694 16.9336 14.9503 16.7633 15.0476C16.5855 15.1494 16.3574 15.1433 16.1871 15.0277C16.0366 14.9258 15.9469 14.754 15.9468 14.5715C15.9468 14.4134 15.9468 14.2553 15.9467 14.0972C15.9467 13.8083 15.9466 13.5195 15.945 13.2291C15.9435 12.9143 15.9449 12.5996 15.9433 12.2849C15.9433 11.9292 15.9432 11.5734 15.9416 11.2161C15.94 10.8801 15.9415 10.5441 15.9399 10.2081C15.9399 10.1643 15.887 10.1424 15.856 10.1734C15.771 10.2584 15.6855 10.3439 15.6009 10.4285C15.4732 10.5562 15.344 10.6854 15.2163 10.8131C15.1646 10.8647 15.1145 10.9149 15.0628 10.9666C14.9746 11.0548 14.891 11.1505 14.774 11.2007C14.5703 11.2888 14.3285 11.2416 14.1719 11.085C14.0153 10.9284 13.9696 10.6851 14.0562 10.4829C14.0988 10.3826 14.1733 10.3111 14.2477 10.2367C14.3313 10.1531 14.415 10.0695 14.4986 9.98585C14.5958 9.88856 14.6946 9.78976 14.7919 9.69247C14.909 9.57543 15.0275 9.45686 15.1446 9.33981C15.2875 9.19693 15.4319 9.05252 15.5748 8.90963C15.6812 8.80323 15.7876 8.69682 15.894 8.59042C15.9593 8.52505 16.0232 8.46121 16.0886 8.39585C16.2162 8.26816 16.3926 8.20434 16.572 8.23478C16.686 8.25153 16.7909 8.30476 16.8715 8.38535Z" fill="white"/>
                <circle cx="16.5" cy="16.4844" r="0.5" fill="#386B9E"/>
            </svg>

                </div>
                <div className={styles.title}>
                 <div>Reveneue</div>
                 <div className={styles.subRow}>
                   <div>
                     Graphs
                   </div>
                   <div>
                     Income
                   </div>
                   <div>
                     Expense
                   </div>
                 </div>
                </div>
                <div>
                   <div className={styles.picker}>
                   <BiDotsVerticalRounded/>
                   </div>
                </div>
            </div>
            <div className={styles.graphRow}>
              <div className={styles.graph}>
                <Line data={data} options={options} />
                <div className={styles.graphRow2}>

                  <div className={styles.revRow} >
                    <div className={styles.dot}/>
                    Total Revenue
                  </div>
                  <div className={styles.revRow}>
                    <div className={styles.dot2}/>
                    Total Revenue
                  </div>
               </div>
            
              </div>
              <div className={styles.descColumn}>
                <div className={styles.singleDesc}>

                 <div className={styles.graph2}>
            <svg className={styles.svg} width={`${size}vw`} height={`${size}vw`}>
                        <circle
                            className={styles.svgcirclebg}
                            stroke={circleOneStroke}
                            cx={`${center}vw`}
                            cy={`${center}vw`}
                            r={`${radius}vw`}
                            strokeWidth={`${strokeWidth}vw`}
                         
                             stroke-linecap="round"
                        />
                        <circle
                            className={styles.svgcircle}
                            stroke={circleTwoStroke}
                            cx={`${center}vw`}
                            cy={`${center}vw`}
                            r={`${radius}vw`}
                            strokeWidth={`${strokeWidth}vw`}
                            strokeDasharray={2* Math.PI *parseInt(radius) *(window.innerWidth/100)}
                            strokeDashoffset={((100 - parseInt(10/2)) / 100) * 2 * Math.PI*parseInt(radius)*(window.innerWidth/100)}
                            stroke-linecap="round"
                       />
                      <text className={styles.text} x={`${center}vw`} y={`${center}vw`}>
                        8%
                      </text>
                    </svg>
                  
               </div>
               <div className={styles.description} >
                 <div className={styles.descTitle}>
                   NetIncome
                 </div>
                 <div className={styles.descSub}>
                   Rs.23,232
                 </div>
               </div>
              </div>
              <div className={styles.singleDesc}>

<div className={styles.graph2}>
<svg className={styles.svg} width={`${size}vw`} height={`${size}vw`}>
       <circle
           className={styles.svgcirclebg}
           stroke={circleOneStroke}
           cx={`${center}vw`}
           cy={`${center}vw`}
           r={`${radius}vw`}
           strokeWidth={`${strokeWidth}vw`}
        
            stroke-linecap="round"
       />
       <circle
           className={styles.svgcircle}
           stroke={circleTwoStroke2}
           cx={`${center}vw`}
           cy={`${center}vw`}
           r={`${radius}vw`}
           strokeWidth={`${strokeWidth}vw`}
           strokeDasharray={2* Math.PI *parseInt(radius) *(window.innerWidth/100)}
           strokeDashoffset={((100 - parseInt(10/2)) / 100) * 2 * Math.PI*parseInt(radius)*(window.innerWidth/100)}
           stroke-linecap="round"
      />
     <text className={styles.text2} x={`${center}vw`} y={`${center}vw`}>
       8%
     </text>
   </svg>
 
</div>
<div className={styles.description} >
<div className={styles.descTitle}>
  Average Spend
</div>
<div className={styles.descSub} style={{color:"tomato"}}>
  Rs.23,232
</div>
</div>
</div>
             </div>
           
            </div>
           
           
        </div>
    )
}

export default MultiGraph